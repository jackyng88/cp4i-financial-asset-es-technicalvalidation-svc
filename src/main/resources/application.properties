# # Base ES Connection Details
mp.messaging.connector.smallrye-kafka.bootstrap.servers=${BOOTSTRAP_SERVERS}
quarkus.http.port=8081

mp.messaging.connector.smallrye-kafka.security.protocol=SASL_SSL
mp.messaging.connector.smallrye-kafka.ssl.protocol=TLSv1.2
mp.messaging.connector.smallrye-kafka.sasl.mechanism=PLAIN
mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
                username="token" \
                password=${API_KEY};
mp.messaging.connector.smallrye-kafka.ssl.truststore.location=${CERT_LOCATION}
mp.messaging.connector.smallrye-kafka.ssl.truststore.password=password


# Consuming details
mp.messaging.incoming.pre-technical-check.connector=smallrye-kafka
mp.messaging.incoming.pre-technical-check.topic=jng-financial-test-topic
mp.messaging.incoming.pre-technical-check.value.deserializer=com.ibm.garage.cpat.cp4i.FinancialMessage.FinancialMessageDeserializer
# #mp.messaging.incoming.pre-technical-check.auto.offset.reset=earliest


# Producer/outgoing connection to ES details
mp.messaging.outgoing.post-technical-check.connector=smallrye-kafka
mp.messaging.outgoing.post-technical-check.topic=jng-financial-test-topic
#mp.messaging.outgoing.post-technical-check.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.post-technical-check.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
